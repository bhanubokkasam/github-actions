# .github/workflows/test-approval-flow.yml

name: Test | Approval & Matrix Flow

on:
  workflow_dispatch:
    # Manual triggers will still use these inputs
    inputs:
      demo_clusters:
        description: 'Demo clusters (JSON array string)'
        required: true
        default: '["demo-cluster-use1", "demo-cluster-usw2"]'
      uat_clusters:
        description: 'UAT clusters (JSON array string)'
        required: true
        default: '["uat-cluster-euw1"]'
      prod_clusters:
        description: 'Prod clusters (JSON array string)'
        required: true
        default: '["prod-cluster-use1", "prod-cluster-usw2"]'
  schedule:
    # Example: Runs every 6 hours. You can change this cron expression.
    - cron: '*/2 * * * *'

jobs:
  # =================================================================
  #  SIMULATE DEPLOY TO DEMO
  # =================================================================
  deploy_demo:
    name: "ðŸ§ª [SIM] Rollout in Demo"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # For cron runs, github.event.inputs is empty, so we provide a default.
        cluster: ${{ fromJSON(github.event.inputs.demo_clusters || '["demo-cluster-use1", "demo-cluster-usw2"]') }}

    steps:
      - name: "Simulate Rollout Restart"
        run: |
          echo "This is a simulation."
          echo "PRETEND: Restarting deployment in cluster ${{ matrix.cluster }}"
          sleep 10 # Simulate work

  # =================================================================
  #  SIMULATE DEPLOY TO UAT
  # =================================================================
  deploy_uat:
    name: "ðŸ§ª [SIM] Rollout in UAT"
    runs-on: ubuntu-latest
    needs: deploy_demo # Depends directly on demo now
    environment:
      name: uat
    strategy:
      fail-fast: false
      matrix:
        cluster: ${{ fromJSON(github.event.inputs.uat_clusters || '["uat-cluster-euw1"]') }}

    steps:
      - name: "Simulate Rollout Restart"
        run: |
          echo "This is a simulation."
          echo "PRETEND: Restarting deployment in cluster ${{ matrix.cluster }}"
          sleep 10 # Simulate work

  # =================================================================
  #  SIMULATE DEPLOY TO PROD
  # =================================================================
  deploy_prod:
    name: "ðŸ§ª [SIM] Rollout in Production"
    runs-on: ubuntu-latest
    needs: deploy_uat # Depends directly on uat now
    environment:
      name: prod
    strategy:
      fail-fast: false
      matrix:
        cluster: ${{ fromJSON(github.event.inputs.prod_clusters || '["prod-cluster-use1", "prod-cluster-usw2"]') }}

    steps:
      - name: "Simulate Rollout Restart"
        run: |
          echo "This is a simulation."
          echo "PRETEND: Restarting deployment in cluster ${{ matrix.cluster }}"
          sleep 10 # Simulate work